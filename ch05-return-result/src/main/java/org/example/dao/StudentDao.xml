<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.dao.StudentDao">
    <select id="selectStudentById" resultType="org.example.domain.Student">
        select id,name,email,age from student where id=#{id}
    </select>

    <!--多个参数使用param命名-->
    <select id="selectMultiParam" resultType="org.example.domain.Student">
        select id,name,email,age from student where name=#{myname} or age=#{myage}
    </select>

    <!--selectStudentReturnViewStudent-->
    <select id="selectStudentReturnViewStudent" resultType="ViewStudent">
        select id,name,email,age from student where id=#{sid}
    </select>

    <!--简单类型-->
    <select id="countStudent" resultType="int">
        select count(*) from student
    </select>

    <!--返回map
    列名是map的key，列值是map的value
    返回map时最多只能返回一行数据
    -->
    <select id="selectMapById" resultType="map">
        select id,name,email from student where id=#{stuid}
    </select>

    <!--
    使用resultMap
        1.定义resultMap
        2.在select标签中使用resultMap来引用1定义的
    -->

    <!--定义resultMap
            id:自定义的名称，表示自定义的resultMap
            type：java类型的全限定名称
    -->
    <resultMap id="studentMap" type="org.example.domain.Student">
        <!--列名和java属性的关系-->
        <!--主键列使用id标签
        column:列名
        property：java类型的属性名
        -->
        <id column="id" property="id" />
        <!--非主键列，使用result-->
        <result column="name" property="email" />
        <result column="email" property="name" />
        <result column="age" property="age" />
    </resultMap>
    <select id="selectAllStudent" resultMap="studentMap">
        select id,name ,email,age from student
    </select>

</mapper>